name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DOCKER_IMAGE_NAME: yasir261/easyshop-app
  DOCKER_MIGRATION_IMAGE_NAME: yasir261/easyshop-migration

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push main app image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }}
          ${{ env.DOCKER_IMAGE_NAME }}:latest
        cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_NAME }}:latest
        cache-to: type=inline
        
    - name: Build and push migration image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./scripts/Dockerfile.migration
        push: true
        tags: |
          ${{ env.DOCKER_MIGRATION_IMAGE_NAME }}:${{ github.run_number }}
          ${{ env.DOCKER_MIGRATION_IMAGE_NAME }}:latest
        cache-from: type=registry,ref=${{ env.DOCKER_MIGRATION_IMAGE_NAME }}:latest
        cache-to: type=inline

    - name: Build
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    
    - name: Run Trivy vulnerability scanner in fs mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'

  update-k8s-manifests:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}

      - name: Update Kubernetes manifests
        run: |
          # Update deployment manifests with new image tags
          sed -i "s|image: yasir261/easyshop-app:.*|image: yasir261/easyshop-app:${{ github.run_number }}|g" kubernetes/08-easyshop-deployment.yaml
          
          if [ -f "kubernetes/12-migration-job.yaml" ]; then
            sed -i "s|image: yasir261/easyshop-migration:.*|image: yasir261/easyshop-migration:${{ github.run_number }}|g" kubernetes/12-migration-job.yaml
          fi
          
          if [ -f "kubernetes/10-ingress.yaml" ]; then
            sed -i "s|host: .*|host: easyshop.letsdeployit.com|g" kubernetes/10-ingress.yaml
          fi

      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          
          if [[ -n $(git status -s) ]]; then
            git add kubernetes/*.yaml
            git commit -m "Update image tags to ${{ github.run_number }} and ensure correct domain [ci skip]"
            git push
          else
            echo "No changes to commit"
          fi
