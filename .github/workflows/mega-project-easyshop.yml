name: EasyShop CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DOCKER_IMAGE_NAME: yasir261/easyshop-app
  DOCKER_MIGRATION_IMAGE_NAME: yasir261/easyshop-migration

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and Push Images
      run: |
        # Build and push main app image
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }} -t ${{ env.DOCKER_IMAGE_NAME }}:latest .
        docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }}
        docker push ${{ env.DOCKER_IMAGE_NAME }}:latest
        
        # Build and push migration image
        docker build -t ${{ env.DOCKER_MIGRATION_IMAGE_NAME }}:${{ github.run_number }} -t ${{ env.DOCKER_MIGRATION_IMAGE_NAME }}:latest -f scripts/Dockerfile.migration .
        docker push ${{ env.DOCKER_MIGRATION_IMAGE_NAME }}:${{ github.run_number }}
        docker push ${{ env.DOCKER_MIGRATION_IMAGE_NAME }}:latest
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Run Frontend Tests
      run: |
        npm run test:unit
        npm run test:integration
        npm run test:accessibility
      
    - name: Run Backend Tests
      run: |
        npm run test:unit
        npm run test:integration
        npm run test:security
      
    - name: Run Database Tests
      run: |
        npm run test:db
        npm run test:validation
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.DOCKER_IMAGE_NAME }}:${{ github.run_number }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
    
    - name: Update Kubernetes manifests
      env:
        GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Configure Git
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        # Update image tags in Kubernetes manifests
        sed -i "s|${DOCKER_IMAGE_NAME}:.*|${DOCKER_IMAGE_NAME}:${GITHUB_RUN_NUMBER}|g" kubernetes/*.yml
        sed -i "s|${DOCKER_MIGRATION_IMAGE_NAME}:.*|${DOCKER_MIGRATION_IMAGE_NAME}:${GITHUB_RUN_NUMBER}|g" kubernetes/*.yml
        
        # Commit and push changes
        git add kubernetes/*.yml
        git commit -m "Update image tags to ${GITHUB_RUN_NUMBER} [skip ci]"
        git push
