version: '3.8'

services:
  mongodb:
    image: mongo:4.4
    container_name: easyshop-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-password}
    networks:
      - easyshop-network
    restart: unless-stopped

  mongodb-exporter:
    image: bitnami/mongodb-exporter:0.11.2
    container_name: mongodb-exporter
    ports:
      - "9216:9216"
    environment:
      - MONGODB_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password}@mongodb:27017/admin
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - easyshop-network
    restart: unless-stopped

  migration:
    image: trainwithshubham/easyshop-migration:latest
    container_name: easyshop-migration
    env_file:
      - .env.local
    environment:
      - MONGODB_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password}@mongodb:27017/easyshop
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - easyshop-network

  app:
    image: trainwithshubham/easyshop-app:latest
    container_name: easyshop-app
    ports:
      - "3000:3000"
    env_file:
      - .env.local
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password}@mongodb:27017/easyshop
    depends_on:
      migration:
        condition: service_completed_successfully
    networks:
      - easyshop-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - easyshop-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    networks:
      - easyshop-network
    restart: unless-stopped

networks:
  easyshop-network:
    name: easyshop-network

volumes:
  mongodb_data:
    name: mongodb_data
  mongodb_config:
    name: mongodb_config
  prometheus_data:
    name: prometheus_data
  grafana_data:
    name: grafana_data 