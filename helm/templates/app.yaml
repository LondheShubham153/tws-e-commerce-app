apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.app.namespace }}
  labels:
    app: {{ .Values.app.name }}
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - containerPort: 3000
              name: http
          envFrom:
            - configMapRef:
                name: {{ .Values.app.name }}-config
            - secretRef:
                name: {{ .Values.app.name }}-secrets
          startupProbe:
            httpGet:
              path: {{ .Values.app.probes.startup.path }}
              port: http
            failureThreshold: {{ .Values.app.probes.startup.failureThreshold }}
            periodSeconds: {{ .Values.app.probes.startup.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.app.probes.readiness.path }}
              port: http
            initialDelaySeconds: {{ .Values.app.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.probes.readiness.periodSeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.app.probes.liveness.path }}
              port: http
            initialDelaySeconds: {{ .Values.app.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.probes.liveness.periodSeconds }}
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app.name }}-service
  namespace: {{ .Values.app.namespace }}
  labels:
    app: {{ .Values.app.name }}
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app: {{ .Values.app.name }}